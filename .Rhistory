filter(sigla_uf=="BA" & populacao>100000) %>%
arrange(nome)
ggplot(data = dados_pernanbuco)+
geom_col(aes(x=dados_pernanbuco$nome,y=dados_pernanbuco$populacao,fill=nome))
PE
ggplot(data = dados_pernanbuco)+
geom_col(aes(x=dados_pernanbuco$nome,y=dados_pernanbuco$populacao,fill=nome))
dados_municipios %>%
filter(sigla_uf=="PE" & populacao>1000000) %>%
ggplo()+
geom_col(aes(x=dados_pernanbuco$nome,y=dados_pernanbuco$populacao,fill=nome))
dados_municipios %>%
filter(sigla_uf=="PE" & populacao>1000000) %>%
ggplo()+
geom_col(aes(x=dados_pernanbuco$nome,y=dados_pernanbuco$populacao,fill=nome))
dados_municipios %>%
filter(sigla_uf=="PE" & populacao>1000000) %>%
ggplot()+
geom_col(aes(x=dados_pernanbuco$nome,y=dados_pernanbuco$populacao,fill=nome))
ggplot(data = dados_pernanbuco)+
geom_col(aes(x=dados_pernanbuco$populacao,y=dados_pernanbuco$nome,fill=nome))
dados_pernanbuco <- dados_municipios %>%
filter(sigla_uf=="PE" & populacao>100000) %>%
arrange(nome)
ggplot(data = dados_pernanbuco)+
geom_col(aes(x=dados_pernanbuco$populacao,y=dados_pernanbuco$nome,fill=nome))
dados_pernanbuco <- dados_municipios %>%
filter(sigla_uf=="PE" & populacao>100000) %>%
arrange(desc(populacao))
ggplot(data = dados_pernanbuco)+
geom_col(aes(x=dados_pernanbuco$populacao,y=dados_pernanbuco$nome,fill=nome))
dados_pernanbuco <- dados_municipios %>%
filter(sigla_uf=="PE" & populacao>100000) %>%
arrange(desc(populacao))
ggplot(data = dados_pernanbuco)+
geom_col(aes(x=dados_pernanbuco$populacao,y=dados_pernanbuco$nome,fill=nome))
ggplot(data = dados_pernanbuco)+
geom_col(aes(x=dados_pernanbuco$populacao,y=dados_pernanbuco$nome,fill=nome))
dados_pernanbuco <- dados_municipios %>%
filter(sigla_uf=="PE" & populacao>100000) %>%
arrange(populacao)
ggplot(data = dados_pernanbuco)+
geom_col(aes(x=dados_pernanbuco$populacao,y=dados_pernanbuco$nome,fill=nome))
View(dados_pernanbuco)
dados_pernanbuco <- dados_municipios %>%
filter(sigla_uf=="PE" & populacao>100000) %>%
arrange(nome)
View(dados_pernanbuco)
dados_pernanbuco <- dados_municipios %>%
filter(sigla_uf=="PE" & populacao>100000) %>%
arrange(population)
View(dados_pernanbuco)
dados_pernanbuco <- dados_municipios %>%
filter(sigla_uf=="PE" & populacao>100000) %>%
arrange(dados_pernanbuco$populacao)
View(dados_pernanbuco)
dados_pernanbuco <- dados_municipios %>%
filter(sigla_uf=="PE" & populacao>100000) %>%
arrange(desc(dados_pernanbuco$populacao))
View(dados_pernanbuco)
dados_pernanbuco <- dados_municipios %>%
filter(sigla_uf=="PE" & populacao>100000) %>%
arrange(populacao)
View(dados_pernanbuco)
dados_pernanbuco <- dados_municipios %>%
filter(sigla_uf=="PE" & populacao>100000) %>%
arrange(desc(populacao))
View(dados_pernanbuco)
ggplot(data = dados_pernanbuco)+
geom_col(aes(x=dados_pernanbuco$populacao,y=dados_pernanbuco$nome,fill=nome))
ggplot(data = dados_pernanbuco)+
geom_col(aes(x=dados_pernanbuco$populacao,y=dados_pernanbuco$nome,fill=nome))
ggplot(data = dados_pernanbuco)+
geom_col(aes(x=dados_pernanbuco$populacao,y=dados_pernanbuco$nome,fill=nome))+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
dados_municipios %>%
filter(sigla_uf=="PE" & populacao>1000000) %>%
ggplot()+
geom_col(aes(x=dados_pernanbuco$nome,y=dados_pernanbuco$populacao,fill=nome))
ggplot(data = dados_pernanbuco)+
geom_col(aes(x = reorder(nome, populacao), y = populacao, fill = nome))
ggplot(data = dados_pernanbuco)+
geom_col(aes(x = reorder(populacao,nome ), y = populacao, fill = nome))
ggplot(data = dados_pernanbuco)+
geom_col(aes(x = reorder(populacao,nome ), y = nome, fill = nome))
populacao
ggplot(data = dados_pernanbuco)+
geom_col(aes(x = reorder(nome, populacao), y = populacao, fill = nome))
ggplot(data = dados_pernanbuco)+
geom_col(aes(x = populacao , y = reorder(nome, populacao), fill = nome))
dados_municipios %>%
filter(sigla_uf=="PE" & populacao>1000000) %>%
ggplot()+
geom_col(aes(x = populacao , y = reorder(nome, populacao), fill = nome))
dados_municipios %>%
filter(sigla_uf=="PE" & populacao>100000) %>%
ggplot()+
geom_col(aes(x = populacao , y = reorder(nome, populacao), fill = nome))
dados_municipios %>%
filter(sigla_uf=="PE" & populacao>100000) %>%
slice_max(populacao,n=10) %>%
ggplot()+
geom_col(aes(x = populacao , y = reorder(nome, populacao), fill = nome))
# Populações de São Paulo e Salvador
pop_saopaulo <- 12325232
pop_salvador <- 776
# Calculando os logaritmos das populações
log_saopaulo <- log10(pop_saopaulo)
log_salvador <- log10(pop_salvador)
# Calculando a média logarítmica
media_log <- (log_saopaulo + log_salvador) / 2
# Calculando a média logarítmica
media_log <- mean(log_saopaulo,log_salvador)
# Calculando a média logarítmica
media_log <- mean(log_saopaulo,log_salvador)
?mean
# Calculando a média logarítmica
media_log <- mean(c(log_saopaulo,log_salvador))
valor <-log_saopaulo-log_salvador
# Calculando a média logarítmica
media_log <- mean(valor)
logs <- c(log_saopaulo, log_salvador)
# Calculando a mediana dos logs
mediana_logs <- median(logs)
arquivo <- "https://raw.githubusercontent.com/fernandobarbalho/enap_auto_instucional/main/data/dados_municipios.csv"
dados_municipios <- read_csv(file=arquivo)
library(tidyverse)
dados_municipios <- read_csv(file=arquivo)
dados_municipios %>%
filter(sigla_uf = 'NE') %>%
ggplot()+
geom_boxplot(aes(x=dados_municipios$sigla_uf,y=dados_municipios$populacao))
dados_municipios %>%
filter(sigla_uf == 'NE') %>%
ggplot()+
geom_boxplot(aes(x=dados_municipios$sigla_uf,y= dados_municipios$populacao))
dados_municipios %>%
filter(sigla_uf == "NE") %>%
ggplot()+
geom_boxplot(aes(x=dados_municipios$sigla_uf,y= dados_municipios$populacao))
dados_municipios %>%
filter(nome_regiao == "NORDESTE") %>%
ggplot()+
geom_boxplot(aes(x=dados_municipios$sigla_uf,y= dados_municipios$populacao))
dados_municipios %>%
filter(sigla_uf=="PE" ) %>%
ggplot()+
geom_boxplot(aes(x=dados_municipios$sigla_uf,y= dados_municipios$populacao))
dados_municipios %>%
filter(sigla_uf=="PE") %>%
ggplot()+
geom_boxplot(aes(x=dados_municipios$sigla_uf,y= dados_municipios$populacao))
nome_regiao == "NORDESTE"
dados_municipios %>%
filter(nome_regiao == "NORDESTE") %>%
ggplot()+
geom_boxplot(aes(x=dados_municipios$sigla_uf,y= dados_municipios$populacao))
dados_municipios %>%
filter(nome_regiao == "NORTE") %>%
ggplot()+
geom_boxplot(aes(x=dados_municipios$sigla_uf,y= dados_municipios$populacao))
dados_municipios %>%
filter(sigla_uf=="PE" & populacao>100000) %>%
slice_max(populacao,n=10) %>%
ggplot()+
geom_col(aes(x = populacao , y = reorder(nome, populacao), fill = nome))
View(dados_municipios)
dados_municipios %>%
filter(nome_regiao == "Norte") %>%
ggplot()+
geom_boxplot(aes(x=dados_municipios$sigla_uf,y= dados_municipios$populacao))
dados_municipios %>%
filter(upper.tri(nome_regiao)  == "NORTE") %>%
ggplot()+
geom_boxplot(aes(x=dados_municipios$sigla_uf,y= dados_municipios$populacao))
dados_note <- dados_municipios %>%
filter(upper.tri(nome_regiao)  == "NORTE")
ggplot(data = dados_note)+
geom_boxplot(aes(x=dados_municipios$sigla_uf,y= dados_municipios$populacao))
dados_municipios %>%
filter(sigla_uf="BA")
dados_municipios %>%
filter(sigla_uf=="BA")
dados_municipios %>%
filter(sigla_uf=="BA") %>%
ggplot()+
geom_boxplot(aes(x=dados_municipios$sigla_uf,y= dados_municipios$populacao))
dados_municipios %>%
filter(sigla_uf=="BA") %>%
ggplot()+
geom_boxplot(aes(x=sigla_uf,y= populacao))
dados_municipios %>%
filter(nome_regiao=="Nordeste") %>%
ggplot()+
geom_boxplot(aes(x=sigla_uf,y= populacao))
dados_municipios %>%
filter(nome_regiao=="Nordeste") %>%
ggplot()+
geom_boxplot(aes(x=sigla_uf,y= populacao))+
scale_y_log10()
geom_boxplot(aes(x=sigla_uf,y= populacao,fill = sigla_uf)+
dados_municipios %>%
filter(nome_regiao=="Nordeste") %>%
ggplot()+
geom_boxplot(aes(x=sigla_uf,y= populacao,fill = sigla_uf))+
scale_y_log10()
dados_municipios %>%
dados_municipios %>%
filter(nome_regiao=="Nordeste") %>%
ggplot()+
geom_boxplot(aes(x=sigla_uf,y= populacao))+
scale_y_log10()
dados_municipios %>%
filter(nome_regiao=="Nordeste") %>%
ggplot()+
geom_boxplot(aes(x=sigla_uf,y= populacao), fill=sigla_uf)+
scale_y_log10()
dados_municipios %>%
filter(nome_regiao=="Nordeste") %>%
ggplot()+
geom_boxplot(aes(x=sigla_uf,y= populacao), fill=dados_municipios$sigla_uf)+
scale_y_log10()
dados_municipios %>%
filter(nome_regiao=="Nordeste") %>%
ggplot()+
geom_boxplot(aes(x=sigla_uf,y= populacao), fill=sigla_uf)+
scale_y_log10()
dados_municipios %>%
filter(nome_regiao=="Nordeste") %>%
ggplot()+
geom_boxplot(aes(x=sigla_uf,y= populacao), colors=dados_municipios$sigla_uf)+
scale_y_log10()
dados_municipios %>%
filter(nome_regiao=="Nordeste") %>%
ggplot()+
geom_boxplot(aes(x=sigla_uf,y= populacao))+
scale_y_log10()
dados_municipios %>%
filter(nome_regiao=="Nordeste") %>%
ggplot()+
geom_histogram(x= populacao)
dados_municipios %>%
filter(nome_regiao=="Nordeste") %>%
ggplot()+
geom_histogram(x= populacao)
dados_municipios %>%
filter(nome_regiao=="Nordeste") %>%
ggplot()+
geom_histogram(x= dados_municipios$populacao)
dados_municipios %>%
filter(nome_regiao=="Nordeste") %>%
ggplot()+
geom_histogram(y= dados_municipios$populacao)
dados_municipios %>%
filter(nome_regiao=="Nordeste") %>%
ggplot()+
geom_histogram(y= populacao)
?geom_histogram
dados_municipios %>%
filter(nome_regiao=="Nordeste") %>%
ggplot()+
geom_histogram(populacao)
dados_municipios %>%
filter(nome_regiao=="Nordeste") %>%
ggplot()+
geom_histogram(populacao)
dados_municipios %>%
filter(nome_regiao=="Nordeste") %>%
ggplot()+
geom_histogram(aes(x=populacao))
?aes
dados_municipios %>%
filter(nome_regiao=="Nordeste") %>%
ggplot()+
geom_histogram(aes(x=populacao))+
scale_x_log10()
dados_municipios %>%
filter(nome_regiao=="Nordeste") %>%
ggplot()+
geom_histogram(aes(x=populacao),colors(blues9))+
scale_x_log10()
dados_municipios %>%
filter(nome_regiao=="Nordeste") %>%
ggplot()+
geom_histogram(aes(x=populacao),colors="Blue")+
scale_x_log10()
dados_municipios %>%
filter(nome_regiao=="Nordeste") %>%
ggplot()+
geom_histogram(aes(x=populacao),color="Blue")+
scale_x_log10()
dados_municipios %>%
filter(nome_regiao=="Nordeste") %>%
ggplot()+
geom_histogram(aes(x=populacao),color="White")+
scale_x_log10()
dados_municipios %>%
filter(nome_regiao=="Norte") %>%
ggplot()+
geom_histogram(aes(x=populacao),color="White")+
scale_x_log10()
dados_municipios %>%
filter(nome_regiao=="Sul") %>%
ggplot()+
geom_histogram(aes(x=populacao),color="White")+
scale_x_log10()
dados_municipios %>%
filter(nome_regiao=="Cento-Oeste") %>%
ggplot()+
geom_histogram(aes(x=populacao),color="White")+
scale_x_log10()
dados_municipios %>%
filter(nome_regiao=="Cento-oeste") %>%
ggplot()+
geom_histogram(aes(x=populacao),color="White")+
scale_x_log10()
dados_municipios %>%
filter(nome_regiao=="Suldeste") %>%
ggplot()+
geom_histogram(aes(x=populacao),color="White")+
scale_x_log10()
Sul
dados_municipios %>%
filter(nome_regiao=="Sul") %>%
ggplot()+
geom_histogram(aes(x=populacao),color="White")+
scale_x_log10()
Nordeste
dados_municipios %>%
filter(nome_regiao=="Nordeste") %>%
ggplot()+
geom_histogram(aes(x=populacao),color="White")+
scale_x_log10()
tabe(dados_municipios$nome_regiao)
table(dados_municipios$nome_regiao)
dados_municipios %>%
filter(nome_regiao=="Sudeste") %>%
ggplot()+
geom_histogram(aes(x=populacao),color="White")+
scale_x_log10()
dados_municipios %>%
ggplot(aes(x = populacao)) +
geom_histogram(color = "White") +
scale_x_log10() +
facet_wrap(~ nome_regiao, ncol = 1)
dados_municipios %>%
filter(sigla_uf=="CE" ) %>%
select(sigla_uf,nome,populacao) %>%
arrange(desc(populacao))
dados_municipios %>%
filter(sigla_uf!="DF" ) %>%
group_by(sigla_uf) %>%
summarise(
media_populacao_municipio = mean(populacao)
) %>%
arrange(desc(media_populacao_municipio))
dados_municipios %>%
filter(sigla_uf=="PE" & populacao>100000) %>%
slice_max(populacao,n=10) %>%
ggplot()+
geom_col(aes(x = populacao , y = reorder(nome, populacao), fill = nome))
dados_municipios %>%
slice_max(populacao,n=10) %>%
ggplot()+
geom_col(aes(x = populacao , y = reorder(nome, populacao), fill = nome))
dados_municipios
dados_municipios %>%
slice_max(populacao,n=10) %>%
ggplot()+
geom_col(aes(x = populacao , y = reorder(nome, populacao), fill = nome))
ggplot(data = dados_pernanbuco)+
geom_col(aes(x = populacao , y = nome, fill = nome))
dados_municipios %>%
slice_max(populacao,n=10) %>%
ggplot()+
geom_col(aes(x = populacao , y = nome, fill = nome))
library(dados)
install.packages(dados)
library(dados)
install.packages("dados")
library(dados)
library(tidyverse)
dados_gapminder %>%
filter(pais=="Brasil") %>%
ggplo()+
geom_point(aes(x=ano,y=expectativa_de_vida))+
geom_point(aes(x=ano,y=expectativa_de_vida))
dados_gapminder %>%
filter(pais=="Brasil") %>%
ggplot()+
geom_point(aes(x=ano,y=expectativa_de_vida))+
geom_point(aes(x=ano,y=expectativa_de_vida))
dados_gapminder %>%
filter(ano==2007) %>%
ggplot()+
geom_point(aes(x=pib_per_capita),color="White")+
scale_y_log10(breaks=c(seq(0,10,1)))+
scale_x_log10()
dados_gapminder %>%
filter(ano==2007) %>%
ggplot()+
geom_histogram(aes(x=pib_per_capita),color="White")+
scale_y_log10(breaks=c(seq(0,10,1)))+
scale_x_log10()
url="https://github.com/fernandobarbalho/enap_auto_instucional/blob/main/data/dados_saude_municipio.csv"
dados_saude_municipio <- read.csv(url)
dados_saude_municipio
View(dados_saude_municipio)
View(dados_saude_municipio)
library(tidyverse)
dados_saude_municipio <- read_csv(url)
View(dados_saude_municipio)
url="https://raw.githubusercontent.com/fernandobarbalho/enap_auto_instucional/main/data/dados_saude_municipio.csv"
dados_saude_municipio <- read_csv(url)
View(dados_saude_municipio)
dados_saude_municipio %>%
ggplot()+
geom_point(aes(x=populacao,y=perc))+
scale_x_log10()
cor(log10(dados_saude_municipio$populacao),dados_saude_municipio$perc)
var(val)
val <-c(105,15,11,937,15,1258)
var(val)
?var
val <-c(105,15,11,93,7,15,1258)
var(val)
val <-c(105,15,11,93,7,15,12,58)
var(val)
val2 <-sort(val)
val2
var(val2)
val <-c(105,15,11,93,7,15,12,5,8)
val2 <-sort(val)
var(val2)
val <-c(102,15,11,93,7,15,12,5,8)
var(val)
val <-c(102,15,11,9,37,15,12,5,8)
var(val)
val <-c(10,2,15,11,9,37,15,12,5,8)
var(val)
val <-c(10,2,15,11,9,3,7,15,12,5,8)
var(val)
matemarica <-c(5.0,8.0,7.0)
matemarica
matemarica <-c(5.0)
matemarica
matemarica <-c(5.1)
matemarica
n <- c(01,08,24,38,44,58,59,72,80,92)
matematica <-c(5.0,8.0,7.0,10.0,6.0,7.0,9.0,3.0,8.0,2.0)
estatistica <-c(6.0,9.0,8.0,10.0,5.0,7.0,8.0,4.0,6.0,2.0)
dados <- data.frame(n,matematica,estatistica)
dados
cor(dados$matematica,dados$estatistica)
distancia <- (2,15,480,325,550,920,670,825,1070,1350,1215)
tempo_entrega <- (1,1,1.5,2,3,3,3.5,4,4.5,5)
distancia <- (2,15,480,325,550,920,670,825,1070,1350,1215)
distancia <- c(2,15,480,325,550,920,670,825,1070,1350,1215)
tempo_entrega <- c(1,1,1.5,2,3,3,3.5,4,4.5,5)
# Criando a nova variável para armazenar as somas
soma_dist_tempo <- numeric(length(distancia))
# Loop for para somar item a item e armazenar na nova variável
for(i in 1:length(distancia)) {
soma_dist_tempo[i] <- distancia[i] + tempo_entrega[i]
}
# Exibindo a nova variável
print(soma_dist_tempo)
soma_dist_tempo[i] <- distancia[i] * tempo_entrega[i]
# Exibindo a nova variável
print(soma_dist_tempo)
distancia <- c(215,480,325,550,920,670,825,1070,1350,1215)
# Criando a nova variável para armazenar as somas
soma_dist_tempo <- numeric(length(distancia))
# Loop for para somar item a item e armazenar na nova variável
for(i in 1:length(distancia)) {
soma_dist_tempo[i] <- distancia[i] * tempo_entrega[i]
}
# Exibindo a nova variável
print(soma_dist_tempo)
soma_x_quadrado[i] <- distancia[i] * distancia[i]
soma_x_quadrado[i] <- numeric(length(distancia))
for(i in 1:length(distancia)) {
soma_x_quadrado[i] <- distancia[i] * distancia[i]
}
soma_x_quadrado <- numeric(length(distancia))
for(i in 1:length(distancia)) {
soma_x_quadrado[i] <- distancia[i] * distancia[i]
}
soma_x_quadrado[i] <- tempo_entrega[i] * tempo_entrega[i]
soma_x_quadrado[i] <- distancia[i] * distancia[i]
for(i in 1:length(distancia)) {
soma_y_quadrado[i] <- tempo_entrega[i] * tempo_entrega[i]
}
soma_y_quadrado <- numeric(length(distancia))
for(i in 1:length(distancia)) {
soma_y_quadrado[i] <- tempo_entrega[i] * tempo_entrega[i]
}
dados <- data.frame(distancia,
tempo_entrega,
soma_dist_tempo,
soma_x_quadrado,
soma_y_quadrado)
dados
cor(dados$distancia,dados$tempo_entrega)
cl,(dados$distancia ~ dados$tempo_entrega)
lm(dados$distancia ~ dados$tempo_entrega)
modelo <-lm(dados$distancia ~ dados$tempo_entrega)
resumo <- summary(resumo)
resumo <- summary(modelo)
aux <- resumo$r.squared
aux
resumo
